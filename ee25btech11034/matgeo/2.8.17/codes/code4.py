import ctypes
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import os

# Define the number of points to generate for each line
NUM_POINTS = 100

# --- Load the Shared C Library ---
# Load the .so file created by the compile.sh script
lib = ctypes.CDLL('./code4.so')

# --- Define the Function Signature ---
# Get a reference to the C function
generate_points_func = lib.generate_line_points

# Define the argument types (argtypes) for the C function
# 1st arg: int
# 2nd-7th args: pointers to a double array
generate_points_func.argtypes = [
    ctypes.c_int,
    np.ctypeslib.ndpointer(dtype=np.float64, ndim=1, flags='C_CONTIGUOUS'),
    np.ctypeslib.ndpointer(dtype=np.float64, ndim=1, flags='C_CONTIGUOUS'),
    np.ctypeslib.ndpointer(dtype=np.float64, ndim=1, flags='C_CONTIGUOUS'),
    np.ctypeslib.ndpointer(dtype=np.float64, ndim=1, flags='C_CONTIGUOUS'),
    np.ctypeslib.ndpointer(dtype=np.float64, ndim=1, flags='C_CONTIGUOUS'),
    np.ctypeslib.ndpointer(dtype=np.float64, ndim=1, flags='C_CONTIGUOUS'),
]
# Define the return type (restype) - our function returns void (nothing)
generate_points_func.restype = None

# --- Prepare Data Arrays and Call the C Function ---
# Create empty NumPy arrays that will be filled by the C function
line1_x = np.empty(NUM_POINTS, dtype=np.float64)
line1_y = np.empty(NUM_POINTS, dtype=np.float64)
line1_z = np.empty(NUM_POINTS, dtype=np.float64)
line2_x = np.empty(NUM_POINTS, dtype=np.float64)
line2_y = np.empty(NUM_POINTS, dtype=np.float64)
line2_z = np.empty(NUM_POINTS, dtype=np.float64)

# Call the C function and pass the arrays
generate_points_func(NUM_POINTS, line1_x, line1_y, line1_z, line2_x, line2_y, line2_z)

# --- Plot the Results ---
fig = plt.figure(figsize=(8, 8))
ax = fig.add_subplot(111, projection='3d')

# Plot the data returned from the C library
ax.plot(line1_x, line1_y, line1_z, label='Line 1', color='blue')
ax.plot(line2_x, line2_y, line2_z, label='Line 2', color='red')
ax.scatter(0, 0, 0, color='black', s=50, label='Origin')

# Set plot labels and title
ax.set_xlabel('X-axis')
ax.set_ylabel('Y-axis')
ax.set_zlabel('Z-axis')
ax.set_title('3D Lines Generated by C and Plotted by Python')
ax.legend()
ax.set_aspect('equal', adjustable='box')

plt.show()
