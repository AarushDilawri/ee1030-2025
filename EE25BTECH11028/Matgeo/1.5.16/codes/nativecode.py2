import numpy as np
import matplotlib.pyplot as plt

# Given vectors
B = np.array([2, 6])
P = np.array([3, -1])
A = 2 * P - B   # From formula A = 2P - B

# Plot setup
fig, ax = plt.subplots(figsize=(6,6))
ax.annotate("", xy=A, xytext=(0,0), arrowprops=dict(arrowstyle="->"))
ax.annotate("", xy=B, xytext=(0,0), arrowprops=dict(arrowstyle="->"))
ax.annotate("", xy=P, xytext=(0,0), arrowprops=dict(arrowstyle="->"))

# Mark points
ax.plot(*A, 'o', color="orange"); ax.text(A[0]+0.2, A[1]+0.2, f"A{tuple(A)}")
ax.plot(*B, 'o', color="cyan");   ax.text(B[0]+0.2, B[1]+0.2, f"B{tuple(B)}")
ax.plot(*P, 'o', color="teal");   ax.text(P[0]+0.2, P[1]+0.2, f"P{tuple(P)}")

# Circle with center P and radius |A-P|
radius = np.linalg.norm(A - P)
circle = plt.Circle(P, radius, fill=False)
ax.add_patch(circle)

# Diameter AB
ax.plot([A[0], B[0]], [A[1], B[1]], '--', color="gold")

# Axes
ax.axhline(0, color="black", linewidth=0.5)
ax.axvline(0, color="black", linewidth=0.5)
ax.set_aspect('equal'); ax.grid(True)

# Save and show
plt.savefig("fig1.2.png", dpi=300, bbox_inches="tight")
plt.show